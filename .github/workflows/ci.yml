name: CI
on: [push, pull_request]

env:
  CARGO_TERM_COLOR: always
  RUST_BACKTRACE: 1

jobs:
  rust:
    name: Test
    strategy:
      matrix:
        rust:
          - stable
          - "1.88"
        include:
          - rust: stable
            extra_components: clippy, rustfmt
      fail-fast: false
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Cache
        uses: actions/cache@v4
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target
          key: ${{ matrix.rust }}-cargo-${{ hashFiles('**/Cargo.lock') }}
      - name: Install Rust
        uses: actions-rust-lang/setup-rust-toolchain@v1
        with:
          toolchain: ${{ matrix.rust }}
          components: ${{ matrix.extra_components }}
      - name: Install dependencies
        run: sudo apt-get update && sudo apt-get install libavcodec-dev libavformat-dev libavutil-dev libswscale-dev pkgconf
      - name: Build (no features)
        run: cargo build --no-default-features --all-targets --workspace
      - name: Build (all features)
        run: cargo build --all-features --all-targets --workspace
      - name: Test (no features)
        run: cargo test --no-default-features --all-targets --workspace
      - name: Test (all features)
        run: cargo test --all-features --all-targets --workspace
      - name: Check fuzz tests
        run: cd fuzz && cargo check --workspace
      - name: Check main workspace formatting
        if: matrix.rust == 'stable'
        run: cargo fmt --all --check
      - name: Check fuzz workspace formatting
        if: matrix.rust == 'stable'
        run: cd fuzz && cargo fmt --all --check
      - name: Clippy on main workspace (no features)
        if: matrix.rust == 'stable'
        run: cargo clippy --no-default-features --workspace -- -D warnings
      - name: Clippy on main workspace (all features)
        if: matrix.rust == 'stable'
        run: cargo clippy --all-features --workspace -- -D warnings
      - name: Clippy on fuzz workspace
        if: matrix.rust == 'stable'
        run: cd fuzz && cargo clippy --workspace -- -D warnings

  license:
    name: Check copyright/license headers
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - run: find . -type f -print0 | xargs -0 .github/workflows/check-license.py
